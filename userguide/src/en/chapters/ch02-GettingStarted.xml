<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../target/docbook-tool-1.0/docbook-xml/docbookx.dtd">

<chapter>
  <title>Getting Started</title>
  
  <section id="demo.setup.one.minute.version">
    <title>One minute version</title>
    <para>
      After downloading the Activiti Explorer WAR file from the <ulink url="http://www.activiti.org">Activiti website</ulink>,
      follow these steps to get the demo setup running with default settings. 
      You'll need a working <ulink url="http://java.sun.com/javase/downloads/index.jsp">Java runtime</ulink> and
      <ulink url="http://tomcat.apache.org/download-70.cgi">Apache Tomcat</ulink> installation.
      <itemizedlist>
        <listitem>
          <para>Copy the downloaded activiti-explorer.war to the webapps directory of Tomcat.</para>
        </listitem>
        <listitem>
          <para>Start Tomcat by running the startup.bat or startup.sh scripts in the bin folder of Tomcat</para>
        </listitem>
        <listitem>
          <para>When Tomcat is started open your browser and go to http://localhost:8080/activiti-explorer. Login with kermit/kermit.</para>
        </listitem>
      </itemizedlist>
      That's it! The Activiti Explorer application uses an in-memory H2 database by default, if you want to use another database 
      configuration please read <link linkend="activiti.setup">the longer version</link>.
    </para>
  </section>
  
  <section id="activiti.setup">
    <title>Activiti setup</title>
    <para>To install Activiti you'll need a working 
    <ulink url="http://java.sun.com/javase/downloads/index.jsp">Java runtime</ulink> and
    <ulink url="http://tomcat.apache.org/download-70.cgi">Apache Tomcat</ulink> installation.
    Also make sure that the <emphasis>JAVA_HOME</emphasis> system
    variable is correctly set. The way to do this depends on your operating system.
    </para>
    <para>To get the Activiti Explorer and REST web applications running just copy the WARs downloaded from
    the Activiti download page to the webapps folder in your Tomcat installation directory. By default the Explorer
    application runs with an in-memory database and with example processes, users and groups.
    </para>
    <para>These are the demo users:</para>
    <table>
      <title>The demo users</title>
      <tgroup cols='3'>
        <thead>
          <row>
            <entry>UserId</entry>
            <entry>Password</entry>
            <entry>Security roles</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>kermit</entry>
            <entry>kermit</entry>
            <entry>admin</entry>
          </row>
          <row>
            <entry>gonzo</entry>
            <entry>gonzo</entry>
            <entry>manager</entry>
          </row>
          <row>
            <entry>fozzie</entry>
            <entry>fozzie</entry>
            <entry>user</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    
    <para>Now you can access following web application:</para>
    <table>
      <title>The webapp tools</title>
      <tgroup cols='4'>
        <thead>
          <row>
            <entry>Webapp Name</entry>
            <entry>URL</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>Activiti Explorer</entry>
            <entry><ulink url="http://localhost:8080/activiti-explorer">http://localhost:8080/activiti-explorer</ulink> </entry>
            <entry>The process engine user console.  Use this tool to start new processes, assign
            tasks, view and claim tasks, etc. This tool also allows to administrate the Activiti engine. 
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    
    <para>
      Note that the Activiti Explorer demo setup is a way of showing the capabilities and functionality of
      Activiti as easy and as fast as possible. This does however, <emphasis role="bold">not</emphasis> mean
      that it is the only way of using Activiti. As Activiti is 'just a jar', it can 
      be embedded in any Java environment: with swing or on a Tomcat, JBoss, WebSphere, etc.
      Or you could very well choose to run Activiti as a typical, standalone BPM server.
      If it is possible in Java, it is possible with Activiti!
    </para>
  </section>
  
  <section id="database.tables.explained">
    <title>Database table names explained</title>
    <para>
      The database names of Activiti all start with <emphasis role="bold">ACT_</emphasis>. The 
      second part is a two-character identification of use case of the table. This use case 
      will also roughly match the service API.
      <itemizedlist>
        <listitem>
          <para>
            <emphasis role="bold">ACT_RE_*</emphasis>: 'RE' stands for <literal>repository</literal>. 
            Tables with this prefix will contain 'static'' information such as process definitions and,
            process resources (images, rules, etc.).
          </para>
        </listitem>
         <listitem>
          <para>
            <emphasis role="bold">ACT_RU_*</emphasis>: 'RU' stands for <literal>runtime</literal>.
            These are the runtime tables, that contain the runtime data of process instances,
            user tasks,variables, jobs, etc. Activiti only stores the runtime data during process instance
            execution, and removes the records when a process instance ends. This keeps 
            the runtime tables small and fast.
          </para>
        </listitem>
         <listitem>
          <para>
            <emphasis role="bold">ACT_ID_*</emphasis>: 'ID' stands for <literal>identity</literal>.
            These tables contain identity information, such as users, groups, etc.
          </para>
        </listitem>
         <listitem>
          <para>
            <emphasis role="bold">ACT_HI_*</emphasis>: 'HI' stands for <literal>history</literal>.
            These are the tables that contain historic data, such as past process instances,
            variables, tasks, etc.
          </para>
        </listitem>
         <listitem>
          <para>
            <emphasis role="bold">ACT_GE_*</emphasis>: <literal>general</literal> data, which is used
            in various use cases.
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </section>
  
</chapter>
